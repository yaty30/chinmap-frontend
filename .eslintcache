[{"/Users/yipjames/Desktop/INS/FYP/chinmap/src/Backend/frontendData/cveScanOutput.tsx":"1","/Users/yipjames/Desktop/INS/FYP/chinmap/src/Backend/frontendData/isScanning.tsx":"2","/Users/yipjames/Desktop/INS/FYP/chinmap/src/Backend/frontendData/getPortStatus.tsx":"3","/Users/yipjames/Desktop/INS/FYP/chinmap/src/Backend/frontendData/Result.tsx":"4","/Users/yipjames/Desktop/INS/FYP/chinmap/src/Components/HomeSettings/HomeSettings.tsx":"5","/Users/yipjames/Desktop/INS/FYP/chinmap/src/Components/Home.tsx":"6","/Users/yipjames/Desktop/INS/FYP/chinmap/src/Components/ScanResult.tsx":"7","/Users/yipjames/Desktop/INS/FYP/chinmap/src/Mobx/Models/homeSettingsStatus.tsx":"8","/Users/yipjames/Desktop/INS/FYP/chinmap/src/Components/ScanResults/ScanDetails.tsx":"9","/Users/yipjames/Desktop/INS/FYP/chinmap/src/Components/ScanResults/WhoIs.tsx":"10","/Users/yipjames/Desktop/INS/FYP/chinmap/src/Backend/frontendData/whoisScan.tsx":"11"},{"size":90,"mtime":1614180305189,"results":"12","hashOfConfig":"13"},{"size":32,"mtime":1614180937961,"results":"14","hashOfConfig":"13"},{"size":314,"mtime":1614182473883,"results":"15","hashOfConfig":"13"},{"size":83,"mtime":1614182483492,"results":"16","hashOfConfig":"13"},{"size":17764,"mtime":1614184472537,"results":"17","hashOfConfig":"13"},{"size":15126,"mtime":1614182888326,"results":"18","hashOfConfig":"13"},{"size":10468,"mtime":1614179894501,"results":"19","hashOfConfig":"13"},{"size":1017,"mtime":1614182788594,"results":"20","hashOfConfig":"13"},{"size":18880,"mtime":1613844862323,"results":"21","hashOfConfig":"13"},{"size":703,"mtime":1614180203274,"results":"22","hashOfConfig":"13"},{"size":91,"mtime":1614182477416,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1122jn7",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/yipjames/Desktop/INS/FYP/chinmap/src/Backend/frontendData/cveScanOutput.tsx",[],"/Users/yipjames/Desktop/INS/FYP/chinmap/src/Backend/frontendData/isScanning.tsx",[],"/Users/yipjames/Desktop/INS/FYP/chinmap/src/Backend/frontendData/getPortStatus.tsx",[],"/Users/yipjames/Desktop/INS/FYP/chinmap/src/Backend/frontendData/Result.tsx",[],"/Users/yipjames/Desktop/INS/FYP/chinmap/src/Components/HomeSettings/HomeSettings.tsx",["48","49","50","51","52","53","54","55","56","57"],"import React, {useState} from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Collapse from '@material-ui/core/Collapse';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Divider from '@material-ui/core/Divider';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\n\n// Components\nimport scanTechniquesData from './json/ScanTechniques/data.json'\nimport hostDiscovery from './json/HostDiscovery/data.json'\nimport osDetection from './json/OSDetection/data.json'\nimport outputOpt from './json/Output/data.json'\nimport portSpecification from './json/PortSpecification/data.json'\nimport serviceAndVersionDetectiony from './json/ServiceAndVersionDetectiony/data.json'\n\n// Mobx\nimport settingsStatus from '../../Mobx/Models/homeSettingsStatus'\n\nimport SetFlags from './SetFlags'\nimport { automation, cveDetection } from './homeSettingsData'\nimport { targetData } from '../target'\nimport { settings } from 'cluster';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n    },\n    container: {\n      display: 'flex',\n    },\n    polygon: {\n      fill: theme.palette.common.white,\n      stroke: theme.palette.divider,\n      strokeWidth: 1,\n    },\n  }),\n);\n\nexport default () => {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleCancel = () => {\n    setOpen(false);\n    settingsStatus.setAuto(false)\n    settingsStatus.setCve(false)\n    setOthers({\n      automation: false,\n      cveDetect: false,\n      pn: false,\n      whoIs: false,\n    })\n  }\n\n  const [others, setOthers] = useState({\n    automation: false,\n    cveDetect: false,\n    pn: false,\n    whoIs: false,\n  });\n\n  const handleOthersChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setOthers({ ...others, [event.target.name]: event.target.checked });\n  };\n\n  const [setRange, setSetRange] = useState('none');\n\n  const handleSetRange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSetRange((event.target as HTMLInputElement).value);\n    settingsStatus.setRange((event.target as HTMLInputElement).value);\n    if (/.0\\/\\d\\d$/.test(settingsStatus.target) === false){\n      settingsStatus.setRange('none');\n      setSetRange('none')\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      <Button \n        onClick={handleClickOpen}\n        style={{\n          textTransform: \"none\"\n        }}\n        disabled={settingsStatus.target.length > 0 ? false : true}\n      >\n        Settings\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"Add-on Features\"}</DialogTitle>\n        <DialogContent>\n          <Divider variant=\"middle\" style={{marginBottom: 25}}/>\n          <Grid container spacing={6}>\n            <Grid item xs={12}>\n              <Paper style={{background: \"#f9f9f9\", padding: \"15px 15px\", textAlign: \"center\"}} elevation={0}>\n                  <Typography>Target:&nbsp;{settingsStatus.target}</Typography>\n              </Paper>\n            </Grid>\n            {/* Set Range */}\n            <Grid item xs={12}>\n              <Tooltip title=\"Scan range only for the target with range, e.g. 192.168.1.0/24\" arrow placement=\"top\" disableHoverListener={/.0\\/\\d\\d$/.test(settingsStatus.target) === true ? true : false}>\n                <Paper style={{background: \"#f9f9f9\", padding: \"15px 15px\"}} elevation={0}>\n                <FormControl component=\"fieldset\">\n                  <FormLabel component=\"legend\">Set Range</FormLabel>\n                  <RadioGroup aria-label=\"gender\" name=\"gender1\" value={setRange} onChange={handleSetRange} style={{marginLeft: 65,marginTop:15}}>\n                    <table>\n                      <tr>\n                      {/* disabled={'.0\\/\\d+$'.test(homeSettings.target) === true ? false : true} */}\n                        <td>\n                          <FormControlLabel value=\"oddOnly\" control={<Radio  disabled={/.0\\/\\d\\d$/.test(settingsStatus.target) === true ? false : true}/>} label=\"Odd Numbers Only\" />\n                        </td>\n                        <td>\n                          <FormControlLabel value=\"even\" control={<Radio  disabled={/.0\\/\\d\\d$/.test(settingsStatus.target) === true ? false : true}/>} label=\"Even Numbers Only\" />\n                        </td>\n                      </tr>\n                      <tr>\n                        <td>\n                          <FormControlLabel value=\"every5hosts\" control={<Radio  disabled={/.0\\/\\d\\d$/.test(settingsStatus.target) === true ? false : true}/>} label=\"Every 5 hosts\" />\n                        </td>\n                        <td>\n                          <FormControlLabel value=\"every10hosts\" control={<Radio  disabled={/.0\\/\\d\\d$/.test(settingsStatus.target) === true ? false : true}/>} label=\"Every 10 hosts\" />\n                        </td>\n                      </tr>\n                      <tr>\n                        <td>\n                          <FormControlLabel value=\"every15hosts\" control={<Radio  disabled={/.0\\/\\d\\d$/.test(settingsStatus.target) === true ? false : true}/>} label=\"Every 15 hosts\" />\n                        </td>\n                        <td>\n                          <FormControlLabel value=\"every20hosts\" control={<Radio  disabled={/.0\\/\\d\\d$/.test(settingsStatus.target) === true ? false : true}/>} label=\"Every 20 hosts\" />\n                        </td>\n                      </tr>\n                      <tr>\n                        <td>\n                          <FormControlLabel value=\"none\" control={<Radio  disabled={/.0\\/\\d\\d$/.test(settingsStatus.target) === true ? false : true}/>} label=\"None\" />\n\n                        </td>\n                      </tr>\n                    </table>\n                  </RadioGroup>\n                </FormControl>\n              </Paper>\n              </Tooltip>\n            </Grid>\n            {/* Set Flags */}\n            <Grid item xs={12} style={{textAlign: \"left\"}}>\n              <Paper style={{background: \"#f9f9f9\", padding: \"15px 15px\", textAlign: \"center\"}} elevation={0}>\n                <Typography style={{textAlign: \"left\",marginBottom: 12,}}>Scan Techniques</Typography>\n                {scanTechniquesData.map((data, index) => {\n                  const [opt, setOpt] = useState(false)\n\n                  return(\n                    <Tooltip title={data.tooltip} arrow placement=\"top\">\n                      <FormControlLabel\n                          value={opt}\n                          control={\n                              <Checkbox \n                                  color=\"primary\" \n                                  checked={opt}\n                                  onChange={(event: React.ChangeEvent<HTMLInputElement>)=> {\n                                    settingsStatus.setFlag(settingsStatus.flag + 1); \n                                    console.log(settingsStatus.flag);\n                                    setOpt(event.target.checked);\n                                  }}\n                              />\n                          }\n                          label={data.flag}\n                          labelPlacement=\"end\"\n                      />\n                    </Tooltip>\n                  )\n                })}\n                <Divider variant=\"middle\" style={{marginTop: 10, marginBottom: 20,}}/>\n                \n                <Typography style={{textAlign: \"left\",marginBottom: 12,}}>Host Discovery</Typography>\n                {hostDiscovery.map((data, index) => {\n                    const [opt, setOpt] = useState(false)\n\n                  return(\n                    <Tooltip title={data.tooltip} arrow placement=\"top\">\n                      <FormControlLabel\n                          value={opt}\n                          control={\n                              <Checkbox \n                                  color=\"primary\" \n                                  checked={opt}\n                                  onChange={(event: React.ChangeEvent<HTMLInputElement>)=> {\n                                    settingsStatus.setFlag(settingsStatus.flag + 1); \n                                    console.log(settingsStatus.flag);\n                                    setOpt(event.target.checked);\n                                  }}\n                              />\n                          }\n                          label={data.flag}\n                          labelPlacement=\"end\"\n                      />\n                    </Tooltip>\n                  )\n                })}\n                <Divider variant=\"middle\" style={{marginTop: 10, marginBottom: 20,}}/>\n\n                <Typography style={{textAlign: \"left\",marginBottom: 12,}}>OS Detection</Typography>\n                {osDetection.map((data, index) => {\n                    const [opt, setOpt] = useState(false)\n\n                  return(\n                    <Tooltip title={data.tooltip} arrow placement=\"top\">\n                      <FormControlLabel\n                          value={opt}\n                          control={\n                              <Checkbox \n                                  color=\"primary\" \n                                  checked={opt}\n                                  onChange={(event: React.ChangeEvent<HTMLInputElement>)=> {\n                                    settingsStatus.setFlag(settingsStatus.flag + 1); \n                                    console.log(settingsStatus.flag);\n                                    setOpt(event.target.checked);\n                                  }}\n                              />\n                          }\n                          label={data.flag}\n                          labelPlacement=\"end\"\n                      />\n                    </Tooltip>\n                  )\n                })}\n                <Divider variant=\"middle\" style={{marginTop: 10, marginBottom: 20,}}/>\n\n                <Typography style={{textAlign: \"left\",marginBottom: 12,}}>Output</Typography>\n                {outputOpt.map((data, index) => {\n                    const [opt, setOpt] = useState(false)\n\n                  return(\n                    <Tooltip title={data.tooltip} arrow placement=\"top\">\n                      <FormControlLabel\n                          value={opt}\n                          control={\n                              <Checkbox \n                                  color=\"primary\" \n                                  checked={opt}\n                                  onChange={(event: React.ChangeEvent<HTMLInputElement>)=> {\n                                    settingsStatus.setFlag(settingsStatus.flag + 1); \n                                    console.log(settingsStatus.flag);\n                                    setOpt(event.target.checked);\n                                  }}\n                              />\n                          }\n                          label={data.flag}\n                          labelPlacement=\"end\"\n                      />\n                    </Tooltip>\n                  )\n                })}\n                <Divider variant=\"middle\" style={{marginTop: 10, marginBottom: 20,}}/>\n\n                <Typography style={{textAlign: \"left\",marginBottom: 12,}}>Port Specification</Typography>\n                {portSpecification.map((data, index) => {\n                    const [opt, setOpt] = useState(false)\n\n                  return(\n                    <Tooltip title={data.tooltip} arrow placement=\"top\">\n                      <FormControlLabel\n                          value={opt}\n                          control={\n                              <Checkbox \n                                  color=\"primary\" \n                                  checked={opt}\n                                  onChange={(event: React.ChangeEvent<HTMLInputElement>)=> {\n                                    settingsStatus.setFlag(settingsStatus.flag + 1); \n                                    console.log(settingsStatus.flag);\n                                    setOpt(event.target.checked);\n                                  }}\n                              />\n                          }\n                          label={data.flag}\n                          labelPlacement=\"end\"\n                      />\n                    </Tooltip>\n                  )\n                })}\n                <Divider variant=\"middle\" style={{marginTop: 10, marginBottom: 20,}}/>\n\n                <Typography style={{textAlign: \"left\",marginBottom: 12,}}>Service And Version Detectiony</Typography>\n                {serviceAndVersionDetectiony.map((data, index) => {\n                    const [opt, setOpt] = useState(false)\n\n                  return(\n                    <Tooltip title={data.tooltip} arrow placement=\"top\">\n                      <FormControlLabel\n                          value={opt}\n                          control={\n                              <Checkbox \n                                  color=\"primary\" \n                                  checked={opt}\n                                  onChange={(event: React.ChangeEvent<HTMLInputElement>)=> {\n                                    settingsStatus.setFlag(settingsStatus.flag + 1); \n                                    console.log(settingsStatus.flag);\n                                    setOpt(event.target.checked);\n                                  }}\n                              />\n                          }\n                          label={data.flag}\n                          labelPlacement=\"end\"\n                      />\n                    </Tooltip>\n                  )\n                })}\n                <Divider variant=\"middle\" style={{marginTop: 10, marginBottom: 20,}}/>\n                \n              </Paper>\n            </Grid>\n            {/* Others */}\n            <Grid item xs={6}>\n              <Paper style={{background: \"#f9f9f9\", padding: \"15px 15px\"}} elevation={0}>\n                <FormControlLabel\n                  label=\"Automation\"\n                  control={\n                    <Switch\n                      checked={others.automation}\n                      onChange={handleOthersChange}\n                      onClick={() => settingsStatus.setAuto(!settingsStatus.automation)}\n                      name=\"automation\"\n                      inputProps={{ 'aria-label': 'Automation' }}\n                    />\n                  }\n                />\n              </Paper>\n            </Grid>\n            <Grid item xs={6}>\n              <Paper style={{background: \"#f9f9f9\", padding: \"15px 15px\"}} elevation={0}>\n                <FormControlLabel\n                  label=\"CVE Detection\"\n                  control={\n                    <Switch\n                      checked={others.cveDetect}\n                      onChange={handleOthersChange}\n                      onClick={() => settingsStatus.setCve(!settingsStatus.cve)}\n                      name=\"cveDetect\"\n                      inputProps={{ 'aria-label': 'CVE Detection' }}\n                    />\n                  }\n                />\n              </Paper>\n            </Grid>\n            <Grid item xs={6}>\n              <Paper style={{background: \"#f9f9f9\", padding: \"15px 15px\"}} elevation={0}>\n                <FormControlLabel\n                  label=\"Ping Block Bypassing\"\n                  control={\n                    <Switch\n                      checked={others.pn}\n                      onChange={handleOthersChange}\n                      onClick={() => settingsStatus.setPn(!settingsStatus.pn)}\n                      name=\"pn\"\n                      inputProps={{ 'aria-label': 'Ping Block Bypassing' }}\n                    />\n                  }\n                />\n              </Paper>\n            </Grid>\n            <Grid item xs={6}>\n              <Paper style={{background: \"#f9f9f9\", padding: \"15px 15px\"}} elevation={0}>\n                <FormControlLabel\n                  label=\"WhoIs\"\n                  control={\n                    <Switch\n                      checked={others.whoIs}\n                      onChange={handleOthersChange}\n                      onClick={() => settingsStatus.setWhoIs(!settingsStatus.whoIs)}\n                      name=\"whoIs\"\n                      inputProps={{ 'aria-label': 'WhoIs' }}\n                    />\n                  }\n                />\n              </Paper>\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCancel} color=\"secondary\">\n            Cancel\n          </Button>\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\n            Save\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\n\n","/Users/yipjames/Desktop/INS/FYP/chinmap/src/Components/Home.tsx",["58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88"],"/Users/yipjames/Desktop/INS/FYP/chinmap/src/Components/ScanResult.tsx",["89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109"],"/Users/yipjames/Desktop/INS/FYP/chinmap/src/Mobx/Models/homeSettingsStatus.tsx",[],"/Users/yipjames/Desktop/INS/FYP/chinmap/src/Components/ScanResults/ScanDetails.tsx",["110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137"],"/Users/yipjames/Desktop/INS/FYP/chinmap/src/Components/ScanResults/WhoIs.tsx",["138","139","140"],"import React, {useState} from 'react'\nimport Typography from '@material-ui/core/Typography'\n\n// Mobx\nimport storeTarget from '../../Mobx/Models/resultSelectStatus'\n\n// Backend\nimport { whoisScanOutput } from '../../Backend/frontendData/whoisScan'\nimport store from '../../Mobx/Models/homeSettingsStatus'\n\nexport default () => {\n    return(\n        <>\n            {whoisScanOutput.map((data, index) => \n            \n               storeTarget.target === data.scanId ?\n                <>\n                    <Typography key={data.scanId} style={{whiteSpace: \"pre-line\"}}>\n                        {data.output}\n                    </Typography>\n                </> : null\n            )}\n        </>\n    )\n}","/Users/yipjames/Desktop/INS/FYP/chinmap/src/Backend/frontendData/whoisScan.tsx",[],{"ruleId":"141","severity":1,"message":"142","line":5,"column":8,"nodeType":"143","messageId":"144","endLine":5,"endColumn":16},{"ruleId":"141","severity":1,"message":"145","line":11,"column":8,"nodeType":"143","messageId":"144","endLine":11,"endColumn":25},{"ruleId":"141","severity":1,"message":"146","line":22,"column":8,"nodeType":"143","messageId":"144","endLine":22,"endColumn":22},{"ruleId":"141","severity":1,"message":"147","line":23,"column":8,"nodeType":"143","messageId":"144","endLine":23,"endColumn":22},{"ruleId":"141","severity":1,"message":"148","line":36,"column":8,"nodeType":"143","messageId":"144","endLine":36,"endColumn":16},{"ruleId":"141","severity":1,"message":"149","line":37,"column":10,"nodeType":"143","messageId":"144","endLine":37,"endColumn":20},{"ruleId":"141","severity":1,"message":"150","line":37,"column":22,"nodeType":"143","messageId":"144","endLine":37,"endColumn":34},{"ruleId":"141","severity":1,"message":"151","line":38,"column":10,"nodeType":"143","messageId":"144","endLine":38,"endColumn":20},{"ruleId":"141","severity":1,"message":"152","line":39,"column":10,"nodeType":"143","messageId":"144","endLine":39,"endColumn":18},{"ruleId":"153","severity":1,"message":"154","line":56,"column":1,"nodeType":"155","endLine":418,"endColumn":2},{"ruleId":"141","severity":1,"message":"156","line":1,"column":16,"nodeType":"143","messageId":"144","endLine":1,"endColumn":24},{"ruleId":"141","severity":1,"message":"157","line":3,"column":10,"nodeType":"143","messageId":"144","endLine":3,"endColumn":16},{"ruleId":"141","severity":1,"message":"158","line":3,"column":18,"nodeType":"143","messageId":"144","endLine":3,"endColumn":23},{"ruleId":"141","severity":1,"message":"159","line":3,"column":31,"nodeType":"143","messageId":"144","endLine":3,"endColumn":44},{"ruleId":"141","severity":1,"message":"160","line":19,"column":8,"nodeType":"143","messageId":"144","endLine":19,"endColumn":15},{"ruleId":"141","severity":1,"message":"142","line":20,"column":8,"nodeType":"143","messageId":"144","endLine":20,"endColumn":16},{"ruleId":"141","severity":1,"message":"161","line":21,"column":8,"nodeType":"143","messageId":"144","endLine":21,"endColumn":15},{"ruleId":"141","severity":1,"message":"162","line":22,"column":8,"nodeType":"143","messageId":"144","endLine":22,"endColumn":28},{"ruleId":"141","severity":1,"message":"163","line":23,"column":8,"nodeType":"143","messageId":"144","endLine":23,"endColumn":12},{"ruleId":"141","severity":1,"message":"164","line":26,"column":8,"nodeType":"143","messageId":"144","endLine":26,"endColumn":22},{"ruleId":"141","severity":1,"message":"165","line":29,"column":10,"nodeType":"143","messageId":"144","endLine":29,"endColumn":29},{"ruleId":"141","severity":1,"message":"166","line":31,"column":10,"nodeType":"143","messageId":"144","endLine":31,"endColumn":20},{"ruleId":"141","severity":1,"message":"151","line":31,"column":22,"nodeType":"143","messageId":"144","endLine":31,"endColumn":32},{"ruleId":"141","severity":1,"message":"167","line":31,"column":34,"nodeType":"143","messageId":"144","endLine":31,"endColumn":44},{"ruleId":"141","severity":1,"message":"168","line":31,"column":46,"nodeType":"143","messageId":"144","endLine":31,"endColumn":56},{"ruleId":"141","severity":1,"message":"169","line":31,"column":58,"nodeType":"143","messageId":"144","endLine":31,"endColumn":66},{"ruleId":"141","severity":1,"message":"170","line":63,"column":7,"nodeType":"143","messageId":"144","endLine":63,"endColumn":21},{"ruleId":"141","severity":1,"message":"171","line":66,"column":9,"nodeType":"143","messageId":"144","endLine":66,"endColumn":20},{"ruleId":"141","severity":1,"message":"172","line":111,"column":10,"nodeType":"143","messageId":"144","endLine":111,"endColumn":17},{"ruleId":"173","severity":1,"message":"174","line":120,"column":54,"nodeType":"175","messageId":"176","endLine":120,"endColumn":56},{"ruleId":"141","severity":1,"message":"177","line":123,"column":10,"nodeType":"143","messageId":"144","endLine":123,"endColumn":15},{"ruleId":"141","severity":1,"message":"178","line":123,"column":17,"nodeType":"143","messageId":"144","endLine":123,"endColumn":25},{"ruleId":"173","severity":1,"message":"174","line":232,"column":64,"nodeType":"175","messageId":"176","endLine":232,"endColumn":66},{"ruleId":"173","severity":1,"message":"174","line":232,"column":98,"nodeType":"175","messageId":"176","endLine":232,"endColumn":100},{"ruleId":"173","severity":1,"message":"174","line":236,"column":58,"nodeType":"175","messageId":"176","endLine":236,"endColumn":60},{"ruleId":"173","severity":1,"message":"174","line":237,"column":58,"nodeType":"175","messageId":"176","endLine":237,"endColumn":60},{"ruleId":"173","severity":1,"message":"174","line":238,"column":58,"nodeType":"175","messageId":"176","endLine":238,"endColumn":60},{"ruleId":"173","severity":1,"message":"174","line":239,"column":58,"nodeType":"175","messageId":"176","endLine":239,"endColumn":60},{"ruleId":"173","severity":1,"message":"174","line":240,"column":58,"nodeType":"175","messageId":"176","endLine":240,"endColumn":60},{"ruleId":"173","severity":1,"message":"174","line":241,"column":58,"nodeType":"175","messageId":"176","endLine":241,"endColumn":60},{"ruleId":"173","severity":1,"message":"174","line":335,"column":26,"nodeType":"175","messageId":"176","endLine":335,"endColumn":28},{"ruleId":"141","severity":1,"message":"156","line":1,"column":16,"nodeType":"143","messageId":"144","endLine":1,"endColumn":24},{"ruleId":"141","severity":1,"message":"179","line":2,"column":43,"nodeType":"143","messageId":"144","endLine":2,"endColumn":50},{"ruleId":"141","severity":1,"message":"157","line":3,"column":10,"nodeType":"143","messageId":"144","endLine":3,"endColumn":16},{"ruleId":"141","severity":1,"message":"158","line":3,"column":18,"nodeType":"143","messageId":"144","endLine":3,"endColumn":23},{"ruleId":"141","severity":1,"message":"180","line":3,"column":25,"nodeType":"143","messageId":"144","endLine":3,"endColumn":29},{"ruleId":"141","severity":1,"message":"159","line":3,"column":31,"nodeType":"143","messageId":"144","endLine":3,"endColumn":44},{"ruleId":"141","severity":1,"message":"181","line":7,"column":8,"nodeType":"143","messageId":"144","endLine":7,"endColumn":17},{"ruleId":"141","severity":1,"message":"182","line":15,"column":8,"nodeType":"143","messageId":"144","endLine":15,"endColumn":19},{"ruleId":"141","severity":1,"message":"163","line":17,"column":8,"nodeType":"143","messageId":"144","endLine":17,"endColumn":12},{"ruleId":"141","severity":1,"message":"183","line":21,"column":10,"nodeType":"143","messageId":"144","endLine":21,"endColumn":14},{"ruleId":"141","severity":1,"message":"184","line":21,"column":16,"nodeType":"143","messageId":"144","endLine":21,"endColumn":20},{"ruleId":"141","severity":1,"message":"185","line":21,"column":22,"nodeType":"143","messageId":"144","endLine":21,"endColumn":26},{"ruleId":"141","severity":1,"message":"186","line":21,"column":28,"nodeType":"143","messageId":"144","endLine":21,"endColumn":36},{"ruleId":"141","severity":1,"message":"187","line":21,"column":38,"nodeType":"143","messageId":"144","endLine":21,"endColumn":48},{"ruleId":"141","severity":1,"message":"188","line":26,"column":10,"nodeType":"143","messageId":"144","endLine":26,"endColumn":20},{"ruleId":"141","severity":1,"message":"189","line":29,"column":10,"nodeType":"143","messageId":"144","endLine":29,"endColumn":14},{"ruleId":"141","severity":1,"message":"190","line":137,"column":9,"nodeType":"143","messageId":"144","endLine":137,"endColumn":22},{"ruleId":"141","severity":1,"message":"191","line":142,"column":10,"nodeType":"143","messageId":"144","endLine":142,"endColumn":17},{"ruleId":"141","severity":1,"message":"192","line":144,"column":9,"nodeType":"143","messageId":"144","endLine":144,"endColumn":20},{"ruleId":"141","severity":1,"message":"193","line":148,"column":9,"nodeType":"143","messageId":"144","endLine":148,"endColumn":21},{"ruleId":"141","severity":1,"message":"194","line":152,"column":12,"nodeType":"143","messageId":"144","endLine":152,"endColumn":23},{"ruleId":"141","severity":1,"message":"156","line":1,"column":16,"nodeType":"143","messageId":"144","endLine":1,"endColumn":24},{"ruleId":"141","severity":1,"message":"166","line":9,"column":10,"nodeType":"143","messageId":"144","endLine":9,"endColumn":20},{"ruleId":"141","severity":1,"message":"167","line":9,"column":34,"nodeType":"143","messageId":"144","endLine":9,"endColumn":44},{"ruleId":"141","severity":1,"message":"168","line":9,"column":46,"nodeType":"143","messageId":"144","endLine":9,"endColumn":56},{"ruleId":"141","severity":1,"message":"169","line":9,"column":58,"nodeType":"143","messageId":"144","endLine":9,"endColumn":66},{"ruleId":"141","severity":1,"message":"195","line":12,"column":10,"nodeType":"143","messageId":"144","endLine":12,"endColumn":20},{"ruleId":"141","severity":1,"message":"188","line":13,"column":10,"nodeType":"143","messageId":"144","endLine":13,"endColumn":20},{"ruleId":"141","severity":1,"message":"196","line":15,"column":8,"nodeType":"143","messageId":"144","endLine":15,"endColumn":21},{"ruleId":"141","severity":1,"message":"189","line":16,"column":10,"nodeType":"143","messageId":"144","endLine":16,"endColumn":14},{"ruleId":"153","severity":1,"message":"154","line":68,"column":1,"nodeType":"155","endLine":461,"endColumn":2},{"ruleId":"141","severity":1,"message":"171","line":71,"column":9,"nodeType":"143","messageId":"144","endLine":71,"endColumn":20},{"ruleId":"173","severity":1,"message":"197","line":78,"column":19,"nodeType":"175","messageId":"176","endLine":78,"endColumn":21},{"ruleId":"173","severity":1,"message":"174","line":133,"column":45,"nodeType":"175","messageId":"176","endLine":133,"endColumn":47},{"ruleId":"173","severity":1,"message":"174","line":186,"column":44,"nodeType":"175","messageId":"176","endLine":186,"endColumn":46},{"ruleId":"173","severity":1,"message":"174","line":204,"column":48,"nodeType":"175","messageId":"176","endLine":204,"endColumn":50},{"ruleId":"173","severity":1,"message":"174","line":220,"column":50,"nodeType":"175","messageId":"176","endLine":220,"endColumn":52},{"ruleId":"173","severity":1,"message":"174","line":259,"column":39,"nodeType":"175","messageId":"176","endLine":259,"endColumn":41},{"ruleId":"173","severity":1,"message":"174","line":277,"column":40,"nodeType":"175","messageId":"176","endLine":277,"endColumn":42},{"ruleId":"173","severity":1,"message":"174","line":298,"column":52,"nodeType":"175","messageId":"176","endLine":298,"endColumn":54},{"ruleId":"173","severity":1,"message":"174","line":315,"column":47,"nodeType":"175","messageId":"176","endLine":315,"endColumn":49},{"ruleId":"173","severity":1,"message":"174","line":333,"column":44,"nodeType":"175","messageId":"176","endLine":333,"endColumn":46},{"ruleId":"173","severity":1,"message":"174","line":352,"column":43,"nodeType":"175","messageId":"176","endLine":352,"endColumn":45},{"ruleId":"173","severity":1,"message":"174","line":367,"column":46,"nodeType":"175","messageId":"176","endLine":367,"endColumn":48},{"ruleId":"173","severity":1,"message":"174","line":382,"column":41,"nodeType":"175","messageId":"176","endLine":382,"endColumn":43},{"ruleId":"173","severity":1,"message":"174","line":403,"column":43,"nodeType":"175","messageId":"176","endLine":403,"endColumn":45},{"ruleId":"173","severity":1,"message":"174","line":417,"column":48,"nodeType":"175","messageId":"176","endLine":417,"endColumn":50},{"ruleId":"173","severity":1,"message":"174","line":431,"column":47,"nodeType":"175","messageId":"176","endLine":431,"endColumn":49},{"ruleId":"173","severity":1,"message":"174","line":446,"column":44,"nodeType":"175","messageId":"176","endLine":446,"endColumn":46},{"ruleId":"141","severity":1,"message":"156","line":1,"column":16,"nodeType":"143","messageId":"144","endLine":1,"endColumn":24},{"ruleId":"141","severity":1,"message":"198","line":9,"column":8,"nodeType":"143","messageId":"144","endLine":9,"endColumn":13},{"ruleId":"153","severity":1,"message":"154","line":11,"column":1,"nodeType":"155","endLine":25,"endColumn":2},"@typescript-eslint/no-unused-vars","'Collapse' is defined but never used.","Identifier","unusedVar","'DialogContentText' is defined but never used.","'ExpandMoreIcon' is defined but never used.","'ExpandLessIcon' is defined but never used.","'SetFlags' is defined but never used.","'automation' is defined but never used.","'cveDetection' is defined but never used.","'targetData' is defined but never used.","'settings' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'useState' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'BrowserRouter' is defined but never used.","'Divider' is defined but never used.","'Popover' is defined but never used.","'LiveHelpOutlinedIcon' is defined but never used.","'Chip' is defined but never used.","'AutomationIcon' is defined but never used.","'customisedScanModes' is defined but never used.","'scanTarget' is defined but never used.","'targetTime' is defined but never used.","'chosenMode' is defined but never used.","'scanDate' is defined but never used.","'ScanOnProgress' is assigned a value but never used.","'handleClick' is assigned a value but never used.","'isEmpty' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'reset' is assigned a value but never used.","'setReset' is assigned a value but never used.","'lighten' is defined but never used.","'Link' is defined but never used.","'TextField' is defined but never used.","'ButtonGroup' is defined but never used.","'Page' is defined but never used.","'Text' is defined but never used.","'View' is defined but never used.","'Document' is defined but never used.","'StyleSheet' is defined but never used.","'pureOutput' is defined but never used.","'rows' is defined but never used.","'handleClickJO' is assigned a value but never used.","'checked' is assigned a value but never used.","'handleClose' is assigned a value but never used.","'handleToggle' is assigned a value but never used.","'FadeOutTime' is defined but never used.","'isScanning' is defined but never used.","'scannedTarget' is defined but never used.","Expected '!==' and instead saw '!='.","'store' is defined but never used."]